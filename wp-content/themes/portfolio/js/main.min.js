const utils = (() => {
    const $ = jQuery;
    let currentScroll = 0;

    const blockScrollPage = () => {
      currentScroll = $(window).scrollTop();
      $('body').css('top', -(document.documentElement.scrollTop) + 'px').addClass('no-scroll');
    }

    const unBlockScrollPage = () => {
      $('body').removeClass('no-scroll');
      $(window).scrollTop(currentScroll);
    }

    const shuffleArray = (array) => {
      var currentIndex = array.length, temporaryValue, randomIndex;
    
      // While there remain elements to shuffle...
      while (0 !== currentIndex) {
    
        // Pick a remaining element...
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex -= 1;
    
        // And swap it with the current element.
        temporaryValue = array[currentIndex];
        array[currentIndex] = array[randomIndex];
        array[randomIndex] = temporaryValue;
      }
    
      return array;
    }

    return {
      blockScrollPage: blockScrollPage,
      unBlockScrollPage: unBlockScrollPage,
      shuffleArray: shuffleArray
    };
})();
  
const header = (() => {
  const $header = $('.o-header');

  const handlerShowHeaderBar = () => {
    if (window.scrollY >= (window.innerHeight - 150)) {
      if (!$header.hasClass('is-shown')) {
        $header.addClass('is-shown');
      }
    } else {
      if ($header.hasClass('is-shown')) {
        $header.removeClass('is-shown');
      }
    }
  }

  const handlerMobileMenu = () => {
    const $menu = $('.o-header__navigation');
    const $actionMenu = $('.o-header__button-toggle .hamburger'); 
    $actionMenu.on('click', function() {
      $(this).toggleClass('is-active');  
      $menu.toggleClass('is-show');         
    }) 
  }    
  

  const init = () => {
    if ($header.length > 0) {
      handlerShowHeaderBar();
      handlerMobileMenu()
      $(window).on('scroll', function () {
        console.log('scroll');
        handlerShowHeaderBar();
      });
    }
  }
    return {
    init: init
  };
})();
const homepage = (() => {
  const $homepage = $('.p-homepage');
  const $header = $homepage.find('.p-homepage__header');
  
  const handlerHeaderSlider = () => {
    var swiper = new Swiper('.p-homepage__header__slider',{
      loop: true,
        autoplay: {
          delay: 4000,
        },
    });
  }

  const handlerAvatarSlider = () => {
    var swiper = new Swiper('.avatar__slider',{
      loop: true,
      spaceBetween: 900,  
      direction: 'vertical',
      autoHeight: true,
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
      },
      autoplay: {
        delay: 1000,
        speed: 1000,
        
      },
    });
  } 

  const adjustAvatarPosition = () => {
    const $avatar = $header.find('.avatar');
    $avatar.css({
      'top': ($header.height() - $avatar.height()) / 2,
      'left': ($header.width() - $avatar.width()) / 2
    });
  }

  const handlerTestimonialsSlider = () => {
    var swiper = new Swiper('.testimonials__slider',{
      loop: true,
      autoplay: {
        delay: 1000,
        speed: 1000,
        spaceBetween: 900
      },
      pagination: {
        loop: true,
        el: '.testimonials .swiper-pagination',
        clickable: true,
      },
    });
  }

  const handlerParallax = ()  => {
    $(window).on('scroll',parallax);

    function parallax(){
        //obtener el nivel de scroll
        var s = $(window).scrollTop();
        //efecto parallax para los fondos
        function parallaxBg(el,t){
          $(el).css({
              'background-attachment':'fixed',
              'background-position': 'center' + (s*t) + 
              'px' 
    
          })
        }
        //efecto parallax para los textos
        function parallaxFront(el,t){
            $(el).css({
                'position':'relative',
                'top': (s*t) + 'px'
            })
        }
        parallaxBg('.picture',.1); 
        parallaxFront('.picture',.8);   
        
    }
  }

  const wow = () => {
    const wow = new WOW({
      boxClass:     'wow',      
      animateClass: 'animated', 
      offset:       -100,          
      mobile:       true,       
      live:         true 
    })
    wow.init();
  }

  const init = () => {
    if ($homepage.length > 0) {
      handlerHeaderSlider();
      handlerAvatarSlider();
      adjustAvatarPosition();
      handlerTestimonialsSlider();
      handlerParallax();
      wow()
      

      $(window).on("resize", function() {
        adjustAvatarPosition();
      });        
    }
  }
  
  return {
    init: init
  };
  
})();
$(document).ready(function () {
    header.init();
    homepage.init();
});
